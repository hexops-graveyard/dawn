// RUN: %dxc -T vs_6_0 -E main %s | FileCheck %s

struct PSInput {
  float4 position : SV_Position;
  float4 color : COLOR;
};

PSInput main(float4 position: POSITION, float4 color: COLOR) {
  PSInput result;
  result.position = position;
  result.color = color;
  return result;
}


// CHECK-WHOLE-SPIR-V:
// ; SPIR-V
// ; Version: 1.0
// ; Generator: Google spiregg; 0
// ; Bound: 37
// ; Schema: 0
//                OpCapability Shader
//                OpMemoryModel Logical GLSL450
//                OpEntryPoint Vertex %main "main" %in_var_POSITION %in_var_COLOR %gl_Position %out_var_COLOR
//                OpSource HLSL 600
//                OpName %in_var_POSITION "in.var.POSITION"
//                OpName %in_var_COLOR "in.var.COLOR"
//                OpName %out_var_COLOR "out.var.COLOR"
//                OpName %main "main"
//                OpName %param_var_position "param.var.position"
//                OpName %param_var_color "param.var.color"
//                OpName %PSInput "PSInput"
//                OpMemberName %PSInput 0 "position"
//                OpMemberName %PSInput 1 "color"
//                OpName %src_main "src.main"
//                OpName %position "position"
//                OpName %color "color"
//                OpName %bb_entry "bb.entry"
//                OpName %result "result"
//                OpDecorate %gl_Position BuiltIn Position
//                OpDecorate %in_var_POSITION Location 0
//                OpDecorate %in_var_COLOR Location 1
//                OpDecorate %out_var_COLOR Location 0
//         %int = OpTypeInt 32 1
//       %int_0 = OpConstant %int 0
//       %int_1 = OpConstant %int 1
//       %float = OpTypeFloat 32
//     %v4float = OpTypeVector %float 4
// %_ptr_Input_v4float = OpTypePointer Input %v4float
// %_ptr_Output_v4float = OpTypePointer Output %v4float
//        %void = OpTypeVoid
//          %14 = OpTypeFunction %void
// %_ptr_Function_v4float = OpTypePointer Function %v4float
//     %PSInput = OpTypeStruct %v4float %v4float
//          %26 = OpTypeFunction %PSInput %_ptr_Function_v4float %_ptr_Function_v4float
// %_ptr_Function_PSInput = OpTypePointer Function %PSInput
// %in_var_POSITION = OpVariable %_ptr_Input_v4float Input
// %in_var_COLOR = OpVariable %_ptr_Input_v4float Input
// %gl_Position = OpVariable %_ptr_Output_v4float Output
// %out_var_COLOR = OpVariable %_ptr_Output_v4float Output
//        %main = OpFunction %void None %14
//          %15 = OpLabel
// %param_var_position = OpVariable %_ptr_Function_v4float Function
// %param_var_color = OpVariable %_ptr_Function_v4float Function
//          %19 = OpLoad %v4float %in_var_POSITION
//                OpStore %param_var_position %19
//          %20 = OpLoad %v4float %in_var_COLOR
//                OpStore %param_var_color %20
//          %22 = OpFunctionCall %PSInput %src_main %param_var_position %param_var_color
//          %24 = OpCompositeExtract %v4float %22 0
//                OpStore %gl_Position %24
//          %25 = OpCompositeExtract %v4float %22 1
//                OpStore %out_var_COLOR %25
//                OpReturn
//                OpFunctionEnd
//    %src_main = OpFunction %PSInput None %26
//    %position = OpFunctionParameter %_ptr_Function_v4float
//       %color = OpFunctionParameter %_ptr_Function_v4float
//    %bb_entry = OpLabel
//      %result = OpVariable %_ptr_Function_PSInput Function
//          %32 = OpLoad %v4float %position
//          %33 = OpAccessChain %_ptr_Function_v4float %result %int_0
//                OpStore %33 %32
//          %34 = OpLoad %v4float %color
//          %35 = OpAccessChain %_ptr_Function_v4float %result %int_1
//                OpStore %35 %34
//          %36 = OpLoad %PSInput %result
//                OpReturnValue %36
//                OpFunctionEnd